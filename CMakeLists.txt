project(MatrixTest)
cmake_minimum_required(VERSION 3.20)
if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  set(tool_prefix "clang")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
  set(tool_prefix "gcc")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
  set(tool_prefix "icc")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
  set(tool_prefix "msvc")
endif()

find_package(OpenMP REQUIRED)
set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")

if(CMAKE_BUILD_TYPE EQUAL "Release")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O3")
endif()
set(CMAKE_CXX_STANDARD 20)

add_library(matrix STATIC matrix.cpp)
function(add_tool toolname)
  set(prefixed_toolname "${tool_prefix}-${toolname}")
  add_executable(${prefixed_toolname} ${toolname}.cpp)
  target_compile_definitions(${prefixed_toolname} PRIVATE COMPILER_ID_NAME="${tool_prefix}")
  target_link_libraries(${prefixed_toolname} matrix)
endfunction()

add_tool(genm)
add_tool(testm)
add_tool(mbench)

